//Lecture-1
1. My SQL Introduction: 

MySQL: Database Management System. 

Database: A Database is a collection of data stored in a format that can easily be accessed. 

How DBMS Works?
        >>>	 >>> 
Laptop	    DBMS     Database
	<<<      <<<

DBMS: 
- Oracle 
- MySQL
- MySQL Server
- Postgre SQL 
- MongoDB

Two type of Database: 
1. Relational (Relational Database(RDBMS))
- RDMBS use SQL (Structured Query Language) 
> Oracle 
> MySQL
> MySQL Server
> Postgre SQL

2. NoSQL 
- NoSQL is not a Table-based Database. 
- NoSQL databases are document based. 
- MongoDB, Redis, Cassandra etc. 

Advantage of MySQL: 
- Cross platform 
- Used with multiple languages (PHP, NodeJS, Python, c#). 
- MySQL Software is Open Source. 
- MySQL is RDBMS. 
- The MySQL Database Server is fast, reliable, scalable and easy to use. 
- MySQL Server works in client/server or embeded systems. 

What we will learn in this course: 
- Create Database & Tables in database. 
- Add Data in database. 
- Update Data in database. 
- Read data from database. 
- Delete data from database. 

//Lecture-2
3. MySQL Create Table: 

3 type of Category in Datatypes: 
1. String 
2. Numeric 
3. Date and Time 

String DataTypes: Multiples see in ref
Numeric DataTypes: Multiples see in ref

Date & Time Datatypes: 
1. Date
2. DATETIME (fsp)
3. TIMESTAMP (fsp)
4. TIME (fsp)
5. YEAR

To Create Database: 
> create database student; 
> use student; //To set default schema 

Create Table Syntax: 

CREATE TABLE table_name(
        column1 datatype,
        column2 datatype,
        column3 datatype 
        ...
)

Creating Table: 
CREATE TABLE personal(
        id INT, 
        name VARCHAR(50),
        birth_date DATE, 
        phone VARCHAR(12),
        gender VARCHAR(1)
);

CREATE TABLE product(
        pid INT, 
        pname VARCHAR(50),
        pcompany VARCHAR(50),
        price INT 
)

//4.Lecture-3
Inserting Data in tables with SQL. 

Syntax: 
INSERT INTO table_name (column1,column2,...)
VALUES (value1,value2,...);

INSERT INTO personal(id,name,birth_date,phone,gender)
VALUES (1, "Ram Kumar","1990-07-15","9032717402","M");

INSERT INTO personal(id,name,birth_date,phone,gender)
VALUES (2, "Meera Khan","1991-02-10","9032717403","F");

//5.Lecture-4
Inserting multiple row in table

Syntax: 
INSERT INTO table_name(column1, column2, ...)
VALUES 
(value1, value2,..),
(value1, value2,..),
(value1, value2,..);

INSERT INTO personal(id,name,birth_date,phone,gender)
VALUES 
(3, "Anil Kapoor","1991-10-05","9032717404","M"),
(4, "Juhi Chawla","1992-03-25","9032717405","F"),
(5, "John Abraham","1992-02-07","9032717406","M");

//6.Constraints. 
List of constraints in MySQL: 
. NOT NULL 
. UNIQUE
. DEFAULT 
. CHECK 
. FOREIGN KEY 
. PRIMARY KEY 

Table Syntax with constraints: 

CREATE TABLE table_name(
        id INT NOT NULL UNIQUE, 
        name VARCHAR(50) NOT NULL,
        age INT NOT NULL CHECK(age>=18),
        gender VARCHAR(10) NOTNULL,
        phone VARCHAR(10) NOTNULL UNIQUE,
        city VARCHAR(10) NOTNULL DEFAULT 'Agra',
);

CREATE TABLE personal(
        id INT NOT NULL UNIQUE, 
        name VARCHAR(50) NOT NULL,
        age INT NOT NULL CHECK (age>=18),
        gender varchar(1) NOT NULL,
        phone VARCHAR(10) NOT NULL UNIQUE, 
        city VARCHAR(15) NOT NULL DEFAULT 'Agra'
);

INSERT INTO personal(id,name,age,gender,phone,city)
VALUES 
(1, "Ram Kumar",19,"M","4022155","Agra");

Check code for constraint: 
1. 
INSERT INTO personal(id,name,age,phone,city)
VALUES 
(2, "Sarita",18,"4015155","Agra");

2. 
INSERT INTO personal(id,name,age,phone)
VALUES 
(3, "Salman Khan",20,"4012155");

3. 
INSERT INTO personal(id,name,age,gender,phone)
VALUES 
(4, "Juhi Chawla",21,"F","4015155");

4.
INSERT INTO personal(id,name,age,gender,phone)
VALUES 
(5, "Johny",15,"F","4015155");

//7.Select with where clause.

How to show data from Tables with SQL?

Syntax: 
SELECT column1, column2, column3, ... 
FROM table_name;

Syntax: 
SELECT * 
FROM table_name;

>>>
> create database student; 
> use student; //To set default schema

Creating Table: 
CREATE TABLE personal(
        id INT NOT NULL UNIQUE, 
        name VARCHAR(50) NOT NULL,
        age INT NOT NULL CHECK (age>=18),
        gender varchar(1) NOT NULL,
        phone VARCHAR(10) NOT NULL UNIQUE, 
        city VARCHAR(15) NOT NULL DEFAULT 'Agra'
);

Inserting Data into Table: 
INSERT INTO personal(id,name,age,gender,phone,city)
VALUES 
(1, "Ram Kumar",19,"M","4022155","Agra"),
(2, "Sarita Kumari",21,"F","4034421","Delhi"),
(3, "Salman Khan",20,"M","4056221","Agra"),
(4, "Juhi Chawla",18,"F","4089821","Bhopal"),
(5, "Anil Kapoor",22,"M","4025221","Agra"),
(6, "John Abraham",21,"M","4033776","Delhi");

>>Displays the Table: 
SELECT * FROM student.personal;

>>Display only particular columns in a table: 
SELECT id, name, phone from personal;

>>Renaming the column names: 
SELECT id AS Id, name AS Student, phone AS Phone from personal;

SELECT id AS Id, name AS "Student Name", phone AS Phone from personal;

>>Select Data with WHERE Clause: 

Syntax: 
SELECT column1, column2, column3, ...
FROM table_name 
WHERE condition;

REF: Where Comparison Operators

>>Data whose gender is Female:
SELECT * FROM personal
WHERE gender = "F";

>>Data whose age is less than 20;
SELECT * FROM personal
WHERE age < 20;

>>Data whose age is less than or equal to 20;
SELECT * FROM personal
WHERE age <= 20;

>>Data whose age is greater than 20;
SELECT * FROM personal
WHERE age > 20;

>>Data who does not stay in agra: 
SELECT * FROM personal
WHERE city != "Agra";

SELECT * FROM personal
WHERE city <> "Agra";

>>Data who stay in agra: 
SELECT * FROM personal
WHERE city = "Agra";


